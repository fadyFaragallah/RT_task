
RT_task3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000059c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  0000059c  00000630  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800068  00800068  00000638  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000638  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000b8  00000000  00000000  00000668  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000066f  00000000  00000000  00000720  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000023a  00000000  00000000  00000d8f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000271  00000000  00000000  00000fc9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001bc  00000000  00000000  0000123c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002c4  00000000  00000000  000013f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000007f6  00000000  00000000  000016bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000088  00000000  00000000  00001eb2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__ctors_end>
   4:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
   8:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
   c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  10:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  14:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  18:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  1c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  20:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  24:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  28:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  2c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  30:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  34:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  38:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  3c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  40:	0c 94 f0 00 	jmp	0x1e0	; 0x1e0 <__vector_16>
  44:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  48:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  4c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  50:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  54:	86 00       	.word	0x0086	; ????
  56:	80 00       	.word	0x0080	; ????
  58:	82 00       	.word	0x0082	; ????
  5a:	84 00       	.word	0x0084	; ????
  5c:	87 00       	.word	0x0087	; ????
  5e:	87 00       	.word	0x0087	; ????
  60:	87 00       	.word	0x0087	; ????
  62:	87 00       	.word	0x0087	; ????
  64:	87 00       	.word	0x0087	; ????
  66:	87 00       	.word	0x0087	; ????
  68:	87 00       	.word	0x0087	; ????
  6a:	87 00       	.word	0x0087	; ????
  6c:	87 00       	.word	0x0087	; ????
  6e:	87 00       	.word	0x0087	; ????
  70:	87 00       	.word	0x0087	; ????
  72:	87 00       	.word	0x0087	; ????
  74:	87 00       	.word	0x0087	; ????
  76:	87 00       	.word	0x0087	; ????
  78:	87 00       	.word	0x0087	; ????
  7a:	87 00       	.word	0x0087	; ????
  7c:	87 00       	.word	0x0087	; ????
  7e:	87 00       	.word	0x0087	; ????
  80:	87 00       	.word	0x0087	; ????
  82:	87 00       	.word	0x0087	; ????
  84:	87 00       	.word	0x0087	; ????
  86:	87 00       	.word	0x0087	; ????
  88:	87 00       	.word	0x0087	; ????
  8a:	87 00       	.word	0x0087	; ????
  8c:	87 00       	.word	0x0087	; ????
  8e:	87 00       	.word	0x0087	; ????
  90:	87 00       	.word	0x0087	; ????
  92:	87 00       	.word	0x0087	; ????
  94:	86 00       	.word	0x0086	; ????
  96:	80 00       	.word	0x0080	; ????
  98:	82 00       	.word	0x0082	; ????
  9a:	84 00       	.word	0x0084	; ????

0000009c <__ctors_end>:
  9c:	11 24       	eor	r1, r1
  9e:	1f be       	out	0x3f, r1	; 63
  a0:	cf e5       	ldi	r28, 0x5F	; 95
  a2:	d8 e0       	ldi	r29, 0x08	; 8
  a4:	de bf       	out	0x3e, r29	; 62
  a6:	cd bf       	out	0x3d, r28	; 61

000000a8 <__do_copy_data>:
  a8:	10 e0       	ldi	r17, 0x00	; 0
  aa:	a0 e6       	ldi	r26, 0x60	; 96
  ac:	b0 e0       	ldi	r27, 0x00	; 0
  ae:	ec e9       	ldi	r30, 0x9C	; 156
  b0:	f5 e0       	ldi	r31, 0x05	; 5
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <__do_copy_data+0x10>
  b4:	05 90       	lpm	r0, Z+
  b6:	0d 92       	st	X+, r0
  b8:	a8 36       	cpi	r26, 0x68	; 104
  ba:	b1 07       	cpc	r27, r17
  bc:	d9 f7       	brne	.-10     	; 0xb4 <__do_copy_data+0xc>

000000be <__do_clear_bss>:
  be:	20 e0       	ldi	r18, 0x00	; 0
  c0:	a8 e6       	ldi	r26, 0x68	; 104
  c2:	b0 e0       	ldi	r27, 0x00	; 0
  c4:	01 c0       	rjmp	.+2      	; 0xc8 <.do_clear_bss_start>

000000c6 <.do_clear_bss_loop>:
  c6:	1d 92       	st	X+, r1

000000c8 <.do_clear_bss_start>:
  c8:	aa 36       	cpi	r26, 0x6A	; 106
  ca:	b2 07       	cpc	r27, r18
  cc:	e1 f7       	brne	.-8      	; 0xc6 <.do_clear_bss_loop>
  ce:	0e 94 2e 01 	call	0x25c	; 0x25c <main>
  d2:	0c 94 cc 02 	jmp	0x598	; 0x598 <_exit>

000000d6 <__bad_interrupt>:
  d6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000da <ADC_voidInit>:
#include "ADC.h"


void ADC_voidInit()
{
	myADCSRA = 0X8F;
  da:	8f e8       	ldi	r24, 0x8F	; 143
  dc:	86 b9       	out	0x06, r24	; 6
	myADMUX = 0X40;
  de:	80 e4       	ldi	r24, 0x40	; 64
  e0:	87 b9       	out	0x07, r24	; 7
  e2:	08 95       	ret

000000e4 <ADC_startConversion>:
}

void ADC_startConversion()
{
	myADCSRA|= (1<<6);
  e4:	36 9a       	sbi	0x06, 6	; 6
  e6:	08 95       	ret

000000e8 <get_port_index>:
 volatile unsigned char*  GPIO_pins[] = {myPINA,myPINB,myPINC,myPIND};

u8 get_port_index (u8 port_name)
{
	u8 i ;
	switch (port_name)
  e8:	48 2f       	mov	r20, r24
  ea:	50 e0       	ldi	r21, 0x00	; 0
  ec:	fa 01       	movw	r30, r20
  ee:	e1 54       	subi	r30, 0x41	; 65
  f0:	f1 09       	sbc	r31, r1
  f2:	e4 32       	cpi	r30, 0x24	; 36
  f4:	f1 05       	cpc	r31, r1
  f6:	58 f4       	brcc	.+22     	; 0x10e <get_port_index+0x26>
  f8:	e6 5d       	subi	r30, 0xD6	; 214
  fa:	ff 4f       	sbci	r31, 0xFF	; 255
  fc:	0c 94 c6 02 	jmp	0x58c	; 0x58c <__tablejump2__>
	case 'a':
		i = 0 ;
		break;
	case 'B' :
	case 'b':
		i = 1 ;
 100:	91 e0       	ldi	r25, 0x01	; 1
		break;
 102:	05 c0       	rjmp	.+10     	; 0x10e <get_port_index+0x26>
	case 'C':
	case 'c':
		i = 2 ;
 104:	92 e0       	ldi	r25, 0x02	; 2
		break;
 106:	03 c0       	rjmp	.+6      	; 0x10e <get_port_index+0x26>
	case 'D':
	case 'd':

		i = 3 ;
 108:	93 e0       	ldi	r25, 0x03	; 3
		break;
 10a:	01 c0       	rjmp	.+2      	; 0x10e <get_port_index+0x26>
	u8 i ;
	switch (port_name)
	{
	case 'A':
	case 'a':
		i = 0 ;
 10c:	90 e0       	ldi	r25, 0x00	; 0
		break;

	}
return i ;

}
 10e:	89 2f       	mov	r24, r25
 110:	08 95       	ret

00000112 <GPIO_voidInit>:


 void GPIO_voidInit(void)
{
	/*Comment!: DDR initialization  */
	*GPIO_dirs[0] = Init_direction_default;
 112:	e0 91 60 00 	lds	r30, 0x0060
 116:	f0 91 61 00 	lds	r31, 0x0061
 11a:	10 82       	st	Z, r1
	*GPIO_dirs[1] = Init_direction_default;
 11c:	e0 91 62 00 	lds	r30, 0x0062
 120:	f0 91 63 00 	lds	r31, 0x0063
 124:	10 82       	st	Z, r1
	*GPIO_dirs[2] = Init_direction_default;
 126:	e0 91 64 00 	lds	r30, 0x0064
 12a:	f0 91 65 00 	lds	r31, 0x0065
 12e:	10 82       	st	Z, r1
	*GPIO_dirs[3] = Init_direction_default;
 130:	e0 91 66 00 	lds	r30, 0x0066
 134:	f0 91 67 00 	lds	r31, 0x0067
 138:	10 82       	st	Z, r1
 13a:	08 95       	ret

0000013c <GPIO_u8_WritePinDir>:
}

//Direction
/*Comment!: Write Pin Direction */
u8 GPIO_u8_WritePinDir(u8 PinIdx,u8 PinDir , u8 Port_Name)
{
 13c:	cf 93       	push	r28
 13e:	c8 2f       	mov	r28, r24
	u8 API_Status ;

	if(PinIdx > no_of_pins_on_port - 1)
 140:	88 30       	cpi	r24, 0x08	; 8
 142:	b8 f5       	brcc	.+110    	; 0x1b2 <GPIO_u8_WritePinDir+0x76>
	{
		API_Status = error_happen;
	}
	else
	{
		switch(PinDir)
 144:	66 23       	and	r22, r22
 146:	d9 f0       	breq	.+54     	; 0x17e <GPIO_u8_WritePinDir+0x42>
 148:	61 30       	cpi	r22, 0x01	; 1
 14a:	a9 f5       	brne	.+106    	; 0x1b6 <GPIO_u8_WritePinDir+0x7a>
		{
		case 1:
			*GPIO_dirs[ get_port_index(Port_Name) ] |= 1<<PinIdx;
 14c:	84 2f       	mov	r24, r20
 14e:	0e 94 74 00 	call	0xe8	; 0xe8 <get_port_index>
 152:	e8 2f       	mov	r30, r24
 154:	f0 e0       	ldi	r31, 0x00	; 0
 156:	ee 0f       	add	r30, r30
 158:	ff 1f       	adc	r31, r31
 15a:	e0 5a       	subi	r30, 0xA0	; 160
 15c:	ff 4f       	sbci	r31, 0xFF	; 255
 15e:	01 90       	ld	r0, Z+
 160:	f0 81       	ld	r31, Z
 162:	e0 2d       	mov	r30, r0
 164:	40 81       	ld	r20, Z
 166:	21 e0       	ldi	r18, 0x01	; 1
 168:	30 e0       	ldi	r19, 0x00	; 0
 16a:	c9 01       	movw	r24, r18
 16c:	02 c0       	rjmp	.+4      	; 0x172 <GPIO_u8_WritePinDir+0x36>
 16e:	88 0f       	add	r24, r24
 170:	99 1f       	adc	r25, r25
 172:	ca 95       	dec	r28
 174:	e2 f7       	brpl	.-8      	; 0x16e <GPIO_u8_WritePinDir+0x32>
 176:	84 2b       	or	r24, r20
 178:	80 83       	st	Z, r24
			API_Status = No_error;
 17a:	81 e0       	ldi	r24, 0x01	; 1
			break;
 17c:	1d c0       	rjmp	.+58     	; 0x1b8 <GPIO_u8_WritePinDir+0x7c>
		case 0:
			*GPIO_dirs[ get_port_index(Port_Name) ] &= ~(1<<PinIdx) ;
 17e:	84 2f       	mov	r24, r20
 180:	0e 94 74 00 	call	0xe8	; 0xe8 <get_port_index>
 184:	e8 2f       	mov	r30, r24
 186:	f0 e0       	ldi	r31, 0x00	; 0
 188:	ee 0f       	add	r30, r30
 18a:	ff 1f       	adc	r31, r31
 18c:	e0 5a       	subi	r30, 0xA0	; 160
 18e:	ff 4f       	sbci	r31, 0xFF	; 255
 190:	01 90       	ld	r0, Z+
 192:	f0 81       	ld	r31, Z
 194:	e0 2d       	mov	r30, r0
 196:	40 81       	ld	r20, Z
 198:	21 e0       	ldi	r18, 0x01	; 1
 19a:	30 e0       	ldi	r19, 0x00	; 0
 19c:	c9 01       	movw	r24, r18
 19e:	02 c0       	rjmp	.+4      	; 0x1a4 <GPIO_u8_WritePinDir+0x68>
 1a0:	88 0f       	add	r24, r24
 1a2:	99 1f       	adc	r25, r25
 1a4:	ca 95       	dec	r28
 1a6:	e2 f7       	brpl	.-8      	; 0x1a0 <GPIO_u8_WritePinDir+0x64>
 1a8:	80 95       	com	r24
 1aa:	84 23       	and	r24, r20
 1ac:	80 83       	st	Z, r24
			API_Status = No_error;
 1ae:	81 e0       	ldi	r24, 0x01	; 1
			break;
 1b0:	03 c0       	rjmp	.+6      	; 0x1b8 <GPIO_u8_WritePinDir+0x7c>
{
	u8 API_Status ;

	if(PinIdx > no_of_pins_on_port - 1)
	{
		API_Status = error_happen;
 1b2:	80 e0       	ldi	r24, 0x00	; 0
 1b4:	01 c0       	rjmp	.+2      	; 0x1b8 <GPIO_u8_WritePinDir+0x7c>
		case 0:
			*GPIO_dirs[ get_port_index(Port_Name) ] &= ~(1<<PinIdx) ;
			API_Status = No_error;
			break;
		default:
			API_Status = error_happen;
 1b6:	80 e0       	ldi	r24, 0x00	; 0
		}
	}

	return API_Status ;

}
 1b8:	cf 91       	pop	r28
 1ba:	08 95       	ret

000001bc <GPIO_u8_WritePortDir>:
}

//Direction
/*Comment!: Write Port Direction */
u8 GPIO_u8_WritePortDir(u8 PortDir, u8 Port_Name)
{
 1bc:	cf 93       	push	r28
 1be:	c8 2f       	mov	r28, r24
 1c0:	86 2f       	mov	r24, r22
	  *GPIO_dirs [ get_port_index(Port_Name) ] = PortDir;
 1c2:	0e 94 74 00 	call	0xe8	; 0xe8 <get_port_index>
 1c6:	e8 2f       	mov	r30, r24
 1c8:	f0 e0       	ldi	r31, 0x00	; 0
 1ca:	ee 0f       	add	r30, r30
 1cc:	ff 1f       	adc	r31, r31
 1ce:	e0 5a       	subi	r30, 0xA0	; 160
 1d0:	ff 4f       	sbci	r31, 0xFF	; 255
 1d2:	01 90       	ld	r0, Z+
 1d4:	f0 81       	ld	r31, Z
 1d6:	e0 2d       	mov	r30, r0
 1d8:	c0 83       	st	Z, r28

	return No_error ;

}
 1da:	81 e0       	ldi	r24, 0x01	; 1
 1dc:	cf 91       	pop	r28
 1de:	08 95       	ret

000001e0 <__vector_16>:
#include "Data_Types.h"

u16 voltage_reading;

ISR(ADC_vect)
{
 1e0:	1f 92       	push	r1
 1e2:	0f 92       	push	r0
 1e4:	0f b6       	in	r0, 0x3f	; 63
 1e6:	0f 92       	push	r0
 1e8:	11 24       	eor	r1, r1
 1ea:	2f 93       	push	r18
 1ec:	3f 93       	push	r19
 1ee:	4f 93       	push	r20
 1f0:	5f 93       	push	r21
 1f2:	6f 93       	push	r22
 1f4:	7f 93       	push	r23
 1f6:	8f 93       	push	r24
 1f8:	9f 93       	push	r25
 1fa:	af 93       	push	r26
 1fc:	bf 93       	push	r27
 1fe:	ef 93       	push	r30
 200:	ff 93       	push	r31
	voltage_reading = myADCL | (myADCH<<8);
 202:	64 b1       	in	r22, 0x04	; 4
 204:	85 b1       	in	r24, 0x05	; 5
 206:	70 e0       	ldi	r23, 0x00	; 0
 208:	78 2b       	or	r23, r24
 20a:	70 93 69 00 	sts	0x0069, r23
 20e:	60 93 68 00 	sts	0x0068, r22
	
	OCR0=((voltage_reading/1023.0)*255);
 212:	80 e0       	ldi	r24, 0x00	; 0
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	0e 94 d5 01 	call	0x3aa	; 0x3aa <__floatunsisf>
 21a:	20 e0       	ldi	r18, 0x00	; 0
 21c:	30 ec       	ldi	r19, 0xC0	; 192
 21e:	4f e7       	ldi	r20, 0x7F	; 127
 220:	54 e4       	ldi	r21, 0x44	; 68
 222:	0e 94 41 01 	call	0x282	; 0x282 <__divsf3>
 226:	20 e0       	ldi	r18, 0x00	; 0
 228:	30 e0       	ldi	r19, 0x00	; 0
 22a:	4f e7       	ldi	r20, 0x7F	; 127
 22c:	53 e4       	ldi	r21, 0x43	; 67
 22e:	0e 94 63 02 	call	0x4c6	; 0x4c6 <__mulsf3>
 232:	0e 94 a9 01 	call	0x352	; 0x352 <__fixunssfsi>
 236:	6c bf       	out	0x3c, r22	; 60
	myADCSRA|= (1<<6);
 238:	36 9a       	sbi	0x06, 6	; 6
}
 23a:	ff 91       	pop	r31
 23c:	ef 91       	pop	r30
 23e:	bf 91       	pop	r27
 240:	af 91       	pop	r26
 242:	9f 91       	pop	r25
 244:	8f 91       	pop	r24
 246:	7f 91       	pop	r23
 248:	6f 91       	pop	r22
 24a:	5f 91       	pop	r21
 24c:	4f 91       	pop	r20
 24e:	3f 91       	pop	r19
 250:	2f 91       	pop	r18
 252:	0f 90       	pop	r0
 254:	0f be       	out	0x3f, r0	; 63
 256:	0f 90       	pop	r0
 258:	1f 90       	pop	r1
 25a:	18 95       	reti

0000025c <main>:
int main(void)
{
	GPIO_voidInit();
 25c:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_voidInit>
	GPIO_u8_WritePortDir(0x01,'d');
 260:	64 e6       	ldi	r22, 0x64	; 100
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	0e 94 de 00 	call	0x1bc	; 0x1bc <GPIO_u8_WritePortDir>
	GPIO_u8_WritePinDir(3,1,'b');
 268:	42 e6       	ldi	r20, 0x62	; 98
 26a:	61 e0       	ldi	r22, 0x01	; 1
 26c:	83 e0       	ldi	r24, 0x03	; 3
 26e:	0e 94 9e 00 	call	0x13c	; 0x13c <GPIO_u8_WritePinDir>
	sei();
 272:	78 94       	sei
	ADC_voidInit();
 274:	0e 94 6d 00 	call	0xda	; 0xda <ADC_voidInit>
	TCCR0 = 0X69;
 278:	89 e6       	ldi	r24, 0x69	; 105
 27a:	83 bf       	out	0x33, r24	; 51
	ADC_startConversion();
 27c:	0e 94 72 00 	call	0xe4	; 0xe4 <ADC_startConversion>
 280:	ff cf       	rjmp	.-2      	; 0x280 <main+0x24>

00000282 <__divsf3>:
 282:	0c d0       	rcall	.+24     	; 0x29c <__divsf3x>
 284:	e6 c0       	rjmp	.+460    	; 0x452 <__fp_round>
 286:	de d0       	rcall	.+444    	; 0x444 <__fp_pscB>
 288:	40 f0       	brcs	.+16     	; 0x29a <__divsf3+0x18>
 28a:	d5 d0       	rcall	.+426    	; 0x436 <__fp_pscA>
 28c:	30 f0       	brcs	.+12     	; 0x29a <__divsf3+0x18>
 28e:	21 f4       	brne	.+8      	; 0x298 <__divsf3+0x16>
 290:	5f 3f       	cpi	r21, 0xFF	; 255
 292:	19 f0       	breq	.+6      	; 0x29a <__divsf3+0x18>
 294:	c7 c0       	rjmp	.+398    	; 0x424 <__fp_inf>
 296:	51 11       	cpse	r21, r1
 298:	10 c1       	rjmp	.+544    	; 0x4ba <__fp_szero>
 29a:	ca c0       	rjmp	.+404    	; 0x430 <__fp_nan>

0000029c <__divsf3x>:
 29c:	eb d0       	rcall	.+470    	; 0x474 <__fp_split3>
 29e:	98 f3       	brcs	.-26     	; 0x286 <__divsf3+0x4>

000002a0 <__divsf3_pse>:
 2a0:	99 23       	and	r25, r25
 2a2:	c9 f3       	breq	.-14     	; 0x296 <__divsf3+0x14>
 2a4:	55 23       	and	r21, r21
 2a6:	b1 f3       	breq	.-20     	; 0x294 <__divsf3+0x12>
 2a8:	95 1b       	sub	r25, r21
 2aa:	55 0b       	sbc	r21, r21
 2ac:	bb 27       	eor	r27, r27
 2ae:	aa 27       	eor	r26, r26
 2b0:	62 17       	cp	r22, r18
 2b2:	73 07       	cpc	r23, r19
 2b4:	84 07       	cpc	r24, r20
 2b6:	38 f0       	brcs	.+14     	; 0x2c6 <__divsf3_pse+0x26>
 2b8:	9f 5f       	subi	r25, 0xFF	; 255
 2ba:	5f 4f       	sbci	r21, 0xFF	; 255
 2bc:	22 0f       	add	r18, r18
 2be:	33 1f       	adc	r19, r19
 2c0:	44 1f       	adc	r20, r20
 2c2:	aa 1f       	adc	r26, r26
 2c4:	a9 f3       	breq	.-22     	; 0x2b0 <__divsf3_pse+0x10>
 2c6:	33 d0       	rcall	.+102    	; 0x32e <__divsf3_pse+0x8e>
 2c8:	0e 2e       	mov	r0, r30
 2ca:	3a f0       	brmi	.+14     	; 0x2da <__divsf3_pse+0x3a>
 2cc:	e0 e8       	ldi	r30, 0x80	; 128
 2ce:	30 d0       	rcall	.+96     	; 0x330 <__divsf3_pse+0x90>
 2d0:	91 50       	subi	r25, 0x01	; 1
 2d2:	50 40       	sbci	r21, 0x00	; 0
 2d4:	e6 95       	lsr	r30
 2d6:	00 1c       	adc	r0, r0
 2d8:	ca f7       	brpl	.-14     	; 0x2cc <__divsf3_pse+0x2c>
 2da:	29 d0       	rcall	.+82     	; 0x32e <__divsf3_pse+0x8e>
 2dc:	fe 2f       	mov	r31, r30
 2de:	27 d0       	rcall	.+78     	; 0x32e <__divsf3_pse+0x8e>
 2e0:	66 0f       	add	r22, r22
 2e2:	77 1f       	adc	r23, r23
 2e4:	88 1f       	adc	r24, r24
 2e6:	bb 1f       	adc	r27, r27
 2e8:	26 17       	cp	r18, r22
 2ea:	37 07       	cpc	r19, r23
 2ec:	48 07       	cpc	r20, r24
 2ee:	ab 07       	cpc	r26, r27
 2f0:	b0 e8       	ldi	r27, 0x80	; 128
 2f2:	09 f0       	breq	.+2      	; 0x2f6 <__divsf3_pse+0x56>
 2f4:	bb 0b       	sbc	r27, r27
 2f6:	80 2d       	mov	r24, r0
 2f8:	bf 01       	movw	r22, r30
 2fa:	ff 27       	eor	r31, r31
 2fc:	93 58       	subi	r25, 0x83	; 131
 2fe:	5f 4f       	sbci	r21, 0xFF	; 255
 300:	2a f0       	brmi	.+10     	; 0x30c <__divsf3_pse+0x6c>
 302:	9e 3f       	cpi	r25, 0xFE	; 254
 304:	51 05       	cpc	r21, r1
 306:	68 f0       	brcs	.+26     	; 0x322 <__divsf3_pse+0x82>
 308:	8d c0       	rjmp	.+282    	; 0x424 <__fp_inf>
 30a:	d7 c0       	rjmp	.+430    	; 0x4ba <__fp_szero>
 30c:	5f 3f       	cpi	r21, 0xFF	; 255
 30e:	ec f3       	brlt	.-6      	; 0x30a <__divsf3_pse+0x6a>
 310:	98 3e       	cpi	r25, 0xE8	; 232
 312:	dc f3       	brlt	.-10     	; 0x30a <__divsf3_pse+0x6a>
 314:	86 95       	lsr	r24
 316:	77 95       	ror	r23
 318:	67 95       	ror	r22
 31a:	b7 95       	ror	r27
 31c:	f7 95       	ror	r31
 31e:	9f 5f       	subi	r25, 0xFF	; 255
 320:	c9 f7       	brne	.-14     	; 0x314 <__divsf3_pse+0x74>
 322:	88 0f       	add	r24, r24
 324:	91 1d       	adc	r25, r1
 326:	96 95       	lsr	r25
 328:	87 95       	ror	r24
 32a:	97 f9       	bld	r25, 7
 32c:	08 95       	ret
 32e:	e1 e0       	ldi	r30, 0x01	; 1
 330:	66 0f       	add	r22, r22
 332:	77 1f       	adc	r23, r23
 334:	88 1f       	adc	r24, r24
 336:	bb 1f       	adc	r27, r27
 338:	62 17       	cp	r22, r18
 33a:	73 07       	cpc	r23, r19
 33c:	84 07       	cpc	r24, r20
 33e:	ba 07       	cpc	r27, r26
 340:	20 f0       	brcs	.+8      	; 0x34a <__divsf3_pse+0xaa>
 342:	62 1b       	sub	r22, r18
 344:	73 0b       	sbc	r23, r19
 346:	84 0b       	sbc	r24, r20
 348:	ba 0b       	sbc	r27, r26
 34a:	ee 1f       	adc	r30, r30
 34c:	88 f7       	brcc	.-30     	; 0x330 <__divsf3_pse+0x90>
 34e:	e0 95       	com	r30
 350:	08 95       	ret

00000352 <__fixunssfsi>:
 352:	98 d0       	rcall	.+304    	; 0x484 <__fp_splitA>
 354:	88 f0       	brcs	.+34     	; 0x378 <__fixunssfsi+0x26>
 356:	9f 57       	subi	r25, 0x7F	; 127
 358:	90 f0       	brcs	.+36     	; 0x37e <__fixunssfsi+0x2c>
 35a:	b9 2f       	mov	r27, r25
 35c:	99 27       	eor	r25, r25
 35e:	b7 51       	subi	r27, 0x17	; 23
 360:	a0 f0       	brcs	.+40     	; 0x38a <__fixunssfsi+0x38>
 362:	d1 f0       	breq	.+52     	; 0x398 <__fixunssfsi+0x46>
 364:	66 0f       	add	r22, r22
 366:	77 1f       	adc	r23, r23
 368:	88 1f       	adc	r24, r24
 36a:	99 1f       	adc	r25, r25
 36c:	1a f0       	brmi	.+6      	; 0x374 <__fixunssfsi+0x22>
 36e:	ba 95       	dec	r27
 370:	c9 f7       	brne	.-14     	; 0x364 <__fixunssfsi+0x12>
 372:	12 c0       	rjmp	.+36     	; 0x398 <__fixunssfsi+0x46>
 374:	b1 30       	cpi	r27, 0x01	; 1
 376:	81 f0       	breq	.+32     	; 0x398 <__fixunssfsi+0x46>
 378:	9f d0       	rcall	.+318    	; 0x4b8 <__fp_zero>
 37a:	b1 e0       	ldi	r27, 0x01	; 1
 37c:	08 95       	ret
 37e:	9c c0       	rjmp	.+312    	; 0x4b8 <__fp_zero>
 380:	67 2f       	mov	r22, r23
 382:	78 2f       	mov	r23, r24
 384:	88 27       	eor	r24, r24
 386:	b8 5f       	subi	r27, 0xF8	; 248
 388:	39 f0       	breq	.+14     	; 0x398 <__fixunssfsi+0x46>
 38a:	b9 3f       	cpi	r27, 0xF9	; 249
 38c:	cc f3       	brlt	.-14     	; 0x380 <__fixunssfsi+0x2e>
 38e:	86 95       	lsr	r24
 390:	77 95       	ror	r23
 392:	67 95       	ror	r22
 394:	b3 95       	inc	r27
 396:	d9 f7       	brne	.-10     	; 0x38e <__fixunssfsi+0x3c>
 398:	3e f4       	brtc	.+14     	; 0x3a8 <__fixunssfsi+0x56>
 39a:	90 95       	com	r25
 39c:	80 95       	com	r24
 39e:	70 95       	com	r23
 3a0:	61 95       	neg	r22
 3a2:	7f 4f       	sbci	r23, 0xFF	; 255
 3a4:	8f 4f       	sbci	r24, 0xFF	; 255
 3a6:	9f 4f       	sbci	r25, 0xFF	; 255
 3a8:	08 95       	ret

000003aa <__floatunsisf>:
 3aa:	e8 94       	clt
 3ac:	09 c0       	rjmp	.+18     	; 0x3c0 <__floatsisf+0x12>

000003ae <__floatsisf>:
 3ae:	97 fb       	bst	r25, 7
 3b0:	3e f4       	brtc	.+14     	; 0x3c0 <__floatsisf+0x12>
 3b2:	90 95       	com	r25
 3b4:	80 95       	com	r24
 3b6:	70 95       	com	r23
 3b8:	61 95       	neg	r22
 3ba:	7f 4f       	sbci	r23, 0xFF	; 255
 3bc:	8f 4f       	sbci	r24, 0xFF	; 255
 3be:	9f 4f       	sbci	r25, 0xFF	; 255
 3c0:	99 23       	and	r25, r25
 3c2:	a9 f0       	breq	.+42     	; 0x3ee <__floatsisf+0x40>
 3c4:	f9 2f       	mov	r31, r25
 3c6:	96 e9       	ldi	r25, 0x96	; 150
 3c8:	bb 27       	eor	r27, r27
 3ca:	93 95       	inc	r25
 3cc:	f6 95       	lsr	r31
 3ce:	87 95       	ror	r24
 3d0:	77 95       	ror	r23
 3d2:	67 95       	ror	r22
 3d4:	b7 95       	ror	r27
 3d6:	f1 11       	cpse	r31, r1
 3d8:	f8 cf       	rjmp	.-16     	; 0x3ca <__floatsisf+0x1c>
 3da:	fa f4       	brpl	.+62     	; 0x41a <__floatsisf+0x6c>
 3dc:	bb 0f       	add	r27, r27
 3de:	11 f4       	brne	.+4      	; 0x3e4 <__floatsisf+0x36>
 3e0:	60 ff       	sbrs	r22, 0
 3e2:	1b c0       	rjmp	.+54     	; 0x41a <__floatsisf+0x6c>
 3e4:	6f 5f       	subi	r22, 0xFF	; 255
 3e6:	7f 4f       	sbci	r23, 0xFF	; 255
 3e8:	8f 4f       	sbci	r24, 0xFF	; 255
 3ea:	9f 4f       	sbci	r25, 0xFF	; 255
 3ec:	16 c0       	rjmp	.+44     	; 0x41a <__floatsisf+0x6c>
 3ee:	88 23       	and	r24, r24
 3f0:	11 f0       	breq	.+4      	; 0x3f6 <__floatsisf+0x48>
 3f2:	96 e9       	ldi	r25, 0x96	; 150
 3f4:	11 c0       	rjmp	.+34     	; 0x418 <__floatsisf+0x6a>
 3f6:	77 23       	and	r23, r23
 3f8:	21 f0       	breq	.+8      	; 0x402 <__floatsisf+0x54>
 3fa:	9e e8       	ldi	r25, 0x8E	; 142
 3fc:	87 2f       	mov	r24, r23
 3fe:	76 2f       	mov	r23, r22
 400:	05 c0       	rjmp	.+10     	; 0x40c <__floatsisf+0x5e>
 402:	66 23       	and	r22, r22
 404:	71 f0       	breq	.+28     	; 0x422 <__floatsisf+0x74>
 406:	96 e8       	ldi	r25, 0x86	; 134
 408:	86 2f       	mov	r24, r22
 40a:	70 e0       	ldi	r23, 0x00	; 0
 40c:	60 e0       	ldi	r22, 0x00	; 0
 40e:	2a f0       	brmi	.+10     	; 0x41a <__floatsisf+0x6c>
 410:	9a 95       	dec	r25
 412:	66 0f       	add	r22, r22
 414:	77 1f       	adc	r23, r23
 416:	88 1f       	adc	r24, r24
 418:	da f7       	brpl	.-10     	; 0x410 <__floatsisf+0x62>
 41a:	88 0f       	add	r24, r24
 41c:	96 95       	lsr	r25
 41e:	87 95       	ror	r24
 420:	97 f9       	bld	r25, 7
 422:	08 95       	ret

00000424 <__fp_inf>:
 424:	97 f9       	bld	r25, 7
 426:	9f 67       	ori	r25, 0x7F	; 127
 428:	80 e8       	ldi	r24, 0x80	; 128
 42a:	70 e0       	ldi	r23, 0x00	; 0
 42c:	60 e0       	ldi	r22, 0x00	; 0
 42e:	08 95       	ret

00000430 <__fp_nan>:
 430:	9f ef       	ldi	r25, 0xFF	; 255
 432:	80 ec       	ldi	r24, 0xC0	; 192
 434:	08 95       	ret

00000436 <__fp_pscA>:
 436:	00 24       	eor	r0, r0
 438:	0a 94       	dec	r0
 43a:	16 16       	cp	r1, r22
 43c:	17 06       	cpc	r1, r23
 43e:	18 06       	cpc	r1, r24
 440:	09 06       	cpc	r0, r25
 442:	08 95       	ret

00000444 <__fp_pscB>:
 444:	00 24       	eor	r0, r0
 446:	0a 94       	dec	r0
 448:	12 16       	cp	r1, r18
 44a:	13 06       	cpc	r1, r19
 44c:	14 06       	cpc	r1, r20
 44e:	05 06       	cpc	r0, r21
 450:	08 95       	ret

00000452 <__fp_round>:
 452:	09 2e       	mov	r0, r25
 454:	03 94       	inc	r0
 456:	00 0c       	add	r0, r0
 458:	11 f4       	brne	.+4      	; 0x45e <__fp_round+0xc>
 45a:	88 23       	and	r24, r24
 45c:	52 f0       	brmi	.+20     	; 0x472 <__fp_round+0x20>
 45e:	bb 0f       	add	r27, r27
 460:	40 f4       	brcc	.+16     	; 0x472 <__fp_round+0x20>
 462:	bf 2b       	or	r27, r31
 464:	11 f4       	brne	.+4      	; 0x46a <__fp_round+0x18>
 466:	60 ff       	sbrs	r22, 0
 468:	04 c0       	rjmp	.+8      	; 0x472 <__fp_round+0x20>
 46a:	6f 5f       	subi	r22, 0xFF	; 255
 46c:	7f 4f       	sbci	r23, 0xFF	; 255
 46e:	8f 4f       	sbci	r24, 0xFF	; 255
 470:	9f 4f       	sbci	r25, 0xFF	; 255
 472:	08 95       	ret

00000474 <__fp_split3>:
 474:	57 fd       	sbrc	r21, 7
 476:	90 58       	subi	r25, 0x80	; 128
 478:	44 0f       	add	r20, r20
 47a:	55 1f       	adc	r21, r21
 47c:	59 f0       	breq	.+22     	; 0x494 <__fp_splitA+0x10>
 47e:	5f 3f       	cpi	r21, 0xFF	; 255
 480:	71 f0       	breq	.+28     	; 0x49e <__fp_splitA+0x1a>
 482:	47 95       	ror	r20

00000484 <__fp_splitA>:
 484:	88 0f       	add	r24, r24
 486:	97 fb       	bst	r25, 7
 488:	99 1f       	adc	r25, r25
 48a:	61 f0       	breq	.+24     	; 0x4a4 <__fp_splitA+0x20>
 48c:	9f 3f       	cpi	r25, 0xFF	; 255
 48e:	79 f0       	breq	.+30     	; 0x4ae <__fp_splitA+0x2a>
 490:	87 95       	ror	r24
 492:	08 95       	ret
 494:	12 16       	cp	r1, r18
 496:	13 06       	cpc	r1, r19
 498:	14 06       	cpc	r1, r20
 49a:	55 1f       	adc	r21, r21
 49c:	f2 cf       	rjmp	.-28     	; 0x482 <__fp_split3+0xe>
 49e:	46 95       	lsr	r20
 4a0:	f1 df       	rcall	.-30     	; 0x484 <__fp_splitA>
 4a2:	08 c0       	rjmp	.+16     	; 0x4b4 <__fp_splitA+0x30>
 4a4:	16 16       	cp	r1, r22
 4a6:	17 06       	cpc	r1, r23
 4a8:	18 06       	cpc	r1, r24
 4aa:	99 1f       	adc	r25, r25
 4ac:	f1 cf       	rjmp	.-30     	; 0x490 <__fp_splitA+0xc>
 4ae:	86 95       	lsr	r24
 4b0:	71 05       	cpc	r23, r1
 4b2:	61 05       	cpc	r22, r1
 4b4:	08 94       	sec
 4b6:	08 95       	ret

000004b8 <__fp_zero>:
 4b8:	e8 94       	clt

000004ba <__fp_szero>:
 4ba:	bb 27       	eor	r27, r27
 4bc:	66 27       	eor	r22, r22
 4be:	77 27       	eor	r23, r23
 4c0:	cb 01       	movw	r24, r22
 4c2:	97 f9       	bld	r25, 7
 4c4:	08 95       	ret

000004c6 <__mulsf3>:
 4c6:	0b d0       	rcall	.+22     	; 0x4de <__mulsf3x>
 4c8:	c4 cf       	rjmp	.-120    	; 0x452 <__fp_round>
 4ca:	b5 df       	rcall	.-150    	; 0x436 <__fp_pscA>
 4cc:	28 f0       	brcs	.+10     	; 0x4d8 <__mulsf3+0x12>
 4ce:	ba df       	rcall	.-140    	; 0x444 <__fp_pscB>
 4d0:	18 f0       	brcs	.+6      	; 0x4d8 <__mulsf3+0x12>
 4d2:	95 23       	and	r25, r21
 4d4:	09 f0       	breq	.+2      	; 0x4d8 <__mulsf3+0x12>
 4d6:	a6 cf       	rjmp	.-180    	; 0x424 <__fp_inf>
 4d8:	ab cf       	rjmp	.-170    	; 0x430 <__fp_nan>
 4da:	11 24       	eor	r1, r1
 4dc:	ee cf       	rjmp	.-36     	; 0x4ba <__fp_szero>

000004de <__mulsf3x>:
 4de:	ca df       	rcall	.-108    	; 0x474 <__fp_split3>
 4e0:	a0 f3       	brcs	.-24     	; 0x4ca <__mulsf3+0x4>

000004e2 <__mulsf3_pse>:
 4e2:	95 9f       	mul	r25, r21
 4e4:	d1 f3       	breq	.-12     	; 0x4da <__mulsf3+0x14>
 4e6:	95 0f       	add	r25, r21
 4e8:	50 e0       	ldi	r21, 0x00	; 0
 4ea:	55 1f       	adc	r21, r21
 4ec:	62 9f       	mul	r22, r18
 4ee:	f0 01       	movw	r30, r0
 4f0:	72 9f       	mul	r23, r18
 4f2:	bb 27       	eor	r27, r27
 4f4:	f0 0d       	add	r31, r0
 4f6:	b1 1d       	adc	r27, r1
 4f8:	63 9f       	mul	r22, r19
 4fa:	aa 27       	eor	r26, r26
 4fc:	f0 0d       	add	r31, r0
 4fe:	b1 1d       	adc	r27, r1
 500:	aa 1f       	adc	r26, r26
 502:	64 9f       	mul	r22, r20
 504:	66 27       	eor	r22, r22
 506:	b0 0d       	add	r27, r0
 508:	a1 1d       	adc	r26, r1
 50a:	66 1f       	adc	r22, r22
 50c:	82 9f       	mul	r24, r18
 50e:	22 27       	eor	r18, r18
 510:	b0 0d       	add	r27, r0
 512:	a1 1d       	adc	r26, r1
 514:	62 1f       	adc	r22, r18
 516:	73 9f       	mul	r23, r19
 518:	b0 0d       	add	r27, r0
 51a:	a1 1d       	adc	r26, r1
 51c:	62 1f       	adc	r22, r18
 51e:	83 9f       	mul	r24, r19
 520:	a0 0d       	add	r26, r0
 522:	61 1d       	adc	r22, r1
 524:	22 1f       	adc	r18, r18
 526:	74 9f       	mul	r23, r20
 528:	33 27       	eor	r19, r19
 52a:	a0 0d       	add	r26, r0
 52c:	61 1d       	adc	r22, r1
 52e:	23 1f       	adc	r18, r19
 530:	84 9f       	mul	r24, r20
 532:	60 0d       	add	r22, r0
 534:	21 1d       	adc	r18, r1
 536:	82 2f       	mov	r24, r18
 538:	76 2f       	mov	r23, r22
 53a:	6a 2f       	mov	r22, r26
 53c:	11 24       	eor	r1, r1
 53e:	9f 57       	subi	r25, 0x7F	; 127
 540:	50 40       	sbci	r21, 0x00	; 0
 542:	8a f0       	brmi	.+34     	; 0x566 <__mulsf3_pse+0x84>
 544:	e1 f0       	breq	.+56     	; 0x57e <__mulsf3_pse+0x9c>
 546:	88 23       	and	r24, r24
 548:	4a f0       	brmi	.+18     	; 0x55c <__mulsf3_pse+0x7a>
 54a:	ee 0f       	add	r30, r30
 54c:	ff 1f       	adc	r31, r31
 54e:	bb 1f       	adc	r27, r27
 550:	66 1f       	adc	r22, r22
 552:	77 1f       	adc	r23, r23
 554:	88 1f       	adc	r24, r24
 556:	91 50       	subi	r25, 0x01	; 1
 558:	50 40       	sbci	r21, 0x00	; 0
 55a:	a9 f7       	brne	.-22     	; 0x546 <__mulsf3_pse+0x64>
 55c:	9e 3f       	cpi	r25, 0xFE	; 254
 55e:	51 05       	cpc	r21, r1
 560:	70 f0       	brcs	.+28     	; 0x57e <__mulsf3_pse+0x9c>
 562:	60 cf       	rjmp	.-320    	; 0x424 <__fp_inf>
 564:	aa cf       	rjmp	.-172    	; 0x4ba <__fp_szero>
 566:	5f 3f       	cpi	r21, 0xFF	; 255
 568:	ec f3       	brlt	.-6      	; 0x564 <__mulsf3_pse+0x82>
 56a:	98 3e       	cpi	r25, 0xE8	; 232
 56c:	dc f3       	brlt	.-10     	; 0x564 <__mulsf3_pse+0x82>
 56e:	86 95       	lsr	r24
 570:	77 95       	ror	r23
 572:	67 95       	ror	r22
 574:	b7 95       	ror	r27
 576:	f7 95       	ror	r31
 578:	e7 95       	ror	r30
 57a:	9f 5f       	subi	r25, 0xFF	; 255
 57c:	c1 f7       	brne	.-16     	; 0x56e <__mulsf3_pse+0x8c>
 57e:	fe 2b       	or	r31, r30
 580:	88 0f       	add	r24, r24
 582:	91 1d       	adc	r25, r1
 584:	96 95       	lsr	r25
 586:	87 95       	ror	r24
 588:	97 f9       	bld	r25, 7
 58a:	08 95       	ret

0000058c <__tablejump2__>:
 58c:	ee 0f       	add	r30, r30
 58e:	ff 1f       	adc	r31, r31

00000590 <__tablejump__>:
 590:	05 90       	lpm	r0, Z+
 592:	f4 91       	lpm	r31, Z
 594:	e0 2d       	mov	r30, r0
 596:	09 94       	ijmp

00000598 <_exit>:
 598:	f8 94       	cli

0000059a <__stop_program>:
 59a:	ff cf       	rjmp	.-2      	; 0x59a <__stop_program>
