
RT_task1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000005c2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  000005c2  00000656  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800070  00800070  00000666  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000666  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000b8  00000000  00000000  00000696  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000696  00000000  00000000  0000074e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000023a  00000000  00000000  00000de4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000210  00000000  00000000  0000101e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001bc  00000000  00000000  00001230  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002bc  00000000  00000000  000013ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000007f6  00000000  00000000  000016a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000088  00000000  00000000  00001e9e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 4e 00 	jmp	0x9c	; 0x9c <__ctors_end>
   4:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
   8:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
   c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  10:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  14:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  18:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  1c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  20:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  24:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  28:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  2c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  30:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  34:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  38:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  3c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  40:	0c 94 02 01 	jmp	0x204	; 0x204 <__vector_16>
  44:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  48:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  4c:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  50:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__bad_interrupt>
  54:	86 00       	.word	0x0086	; ????
  56:	80 00       	.word	0x0080	; ????
  58:	82 00       	.word	0x0082	; ????
  5a:	84 00       	.word	0x0084	; ????
  5c:	87 00       	.word	0x0087	; ????
  5e:	87 00       	.word	0x0087	; ????
  60:	87 00       	.word	0x0087	; ????
  62:	87 00       	.word	0x0087	; ????
  64:	87 00       	.word	0x0087	; ????
  66:	87 00       	.word	0x0087	; ????
  68:	87 00       	.word	0x0087	; ????
  6a:	87 00       	.word	0x0087	; ????
  6c:	87 00       	.word	0x0087	; ????
  6e:	87 00       	.word	0x0087	; ????
  70:	87 00       	.word	0x0087	; ????
  72:	87 00       	.word	0x0087	; ????
  74:	87 00       	.word	0x0087	; ????
  76:	87 00       	.word	0x0087	; ????
  78:	87 00       	.word	0x0087	; ????
  7a:	87 00       	.word	0x0087	; ????
  7c:	87 00       	.word	0x0087	; ????
  7e:	87 00       	.word	0x0087	; ????
  80:	87 00       	.word	0x0087	; ????
  82:	87 00       	.word	0x0087	; ????
  84:	87 00       	.word	0x0087	; ????
  86:	87 00       	.word	0x0087	; ????
  88:	87 00       	.word	0x0087	; ????
  8a:	87 00       	.word	0x0087	; ????
  8c:	87 00       	.word	0x0087	; ????
  8e:	87 00       	.word	0x0087	; ????
  90:	87 00       	.word	0x0087	; ????
  92:	87 00       	.word	0x0087	; ????
  94:	86 00       	.word	0x0086	; ????
  96:	80 00       	.word	0x0080	; ????
  98:	82 00       	.word	0x0082	; ????
  9a:	84 00       	.word	0x0084	; ????

0000009c <__ctors_end>:
  9c:	11 24       	eor	r1, r1
  9e:	1f be       	out	0x3f, r1	; 63
  a0:	cf e5       	ldi	r28, 0x5F	; 95
  a2:	d8 e0       	ldi	r29, 0x08	; 8
  a4:	de bf       	out	0x3e, r29	; 62
  a6:	cd bf       	out	0x3d, r28	; 61

000000a8 <__do_copy_data>:
  a8:	10 e0       	ldi	r17, 0x00	; 0
  aa:	a0 e6       	ldi	r26, 0x60	; 96
  ac:	b0 e0       	ldi	r27, 0x00	; 0
  ae:	e2 ec       	ldi	r30, 0xC2	; 194
  b0:	f5 e0       	ldi	r31, 0x05	; 5
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <__do_copy_data+0x10>
  b4:	05 90       	lpm	r0, Z+
  b6:	0d 92       	st	X+, r0
  b8:	a0 37       	cpi	r26, 0x70	; 112
  ba:	b1 07       	cpc	r27, r17
  bc:	d9 f7       	brne	.-10     	; 0xb4 <__do_copy_data+0xc>

000000be <__do_clear_bss>:
  be:	20 e0       	ldi	r18, 0x00	; 0
  c0:	a0 e7       	ldi	r26, 0x70	; 112
  c2:	b0 e0       	ldi	r27, 0x00	; 0
  c4:	01 c0       	rjmp	.+2      	; 0xc8 <.do_clear_bss_start>

000000c6 <.do_clear_bss_loop>:
  c6:	1d 92       	st	X+, r1

000000c8 <.do_clear_bss_start>:
  c8:	a2 37       	cpi	r26, 0x72	; 114
  ca:	b2 07       	cpc	r27, r18
  cc:	e1 f7       	brne	.-8      	; 0xc6 <.do_clear_bss_loop>
  ce:	0e 94 43 01 	call	0x286	; 0x286 <main>
  d2:	0c 94 df 02 	jmp	0x5be	; 0x5be <_exit>

000000d6 <__bad_interrupt>:
  d6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000da <ADC_voidInit>:
#include "ADC.h"


void ADC_voidInit()
{
	myADCSRA = 0X8F;
  da:	8f e8       	ldi	r24, 0x8F	; 143
  dc:	86 b9       	out	0x06, r24	; 6
	myADMUX = 0X40;
  de:	80 e4       	ldi	r24, 0x40	; 64
  e0:	87 b9       	out	0x07, r24	; 7
  e2:	08 95       	ret

000000e4 <ADC_startConversion>:
}

void ADC_startConversion()
{
	myADCSRA|= (1<<6);
  e4:	36 9a       	sbi	0x06, 6	; 6
  e6:	08 95       	ret

000000e8 <get_port_index>:
 volatile unsigned char*  GPIO_pins[] = {myPINA,myPINB,myPINC,myPIND};

u8 get_port_index (u8 port_name)
{
	u8 i ;
	switch (port_name)
  e8:	48 2f       	mov	r20, r24
  ea:	50 e0       	ldi	r21, 0x00	; 0
  ec:	fa 01       	movw	r30, r20
  ee:	e1 54       	subi	r30, 0x41	; 65
  f0:	f1 09       	sbc	r31, r1
  f2:	e4 32       	cpi	r30, 0x24	; 36
  f4:	f1 05       	cpc	r31, r1
  f6:	58 f4       	brcc	.+22     	; 0x10e <get_port_index+0x26>
  f8:	e6 5d       	subi	r30, 0xD6	; 214
  fa:	ff 4f       	sbci	r31, 0xFF	; 255
  fc:	0c 94 d9 02 	jmp	0x5b2	; 0x5b2 <__tablejump2__>
	case 'a':
		i = 0 ;
		break;
	case 'B' :
	case 'b':
		i = 1 ;
 100:	91 e0       	ldi	r25, 0x01	; 1
		break;
 102:	05 c0       	rjmp	.+10     	; 0x10e <get_port_index+0x26>
	case 'C':
	case 'c':
		i = 2 ;
 104:	92 e0       	ldi	r25, 0x02	; 2
		break;
 106:	03 c0       	rjmp	.+6      	; 0x10e <get_port_index+0x26>
	case 'D':
	case 'd':

		i = 3 ;
 108:	93 e0       	ldi	r25, 0x03	; 3
		break;
 10a:	01 c0       	rjmp	.+2      	; 0x10e <get_port_index+0x26>
	u8 i ;
	switch (port_name)
	{
	case 'A':
	case 'a':
		i = 0 ;
 10c:	90 e0       	ldi	r25, 0x00	; 0
		break;

	}
return i ;

}
 10e:	89 2f       	mov	r24, r25
 110:	08 95       	ret

00000112 <GPIO_voidInit>:


 void GPIO_voidInit(void)
{
	/*Comment!: DDR initialization  */
	*GPIO_dirs[0] = Init_direction_default;
 112:	e0 91 60 00 	lds	r30, 0x0060
 116:	f0 91 61 00 	lds	r31, 0x0061
 11a:	10 82       	st	Z, r1
	*GPIO_dirs[1] = Init_direction_default;
 11c:	e0 91 62 00 	lds	r30, 0x0062
 120:	f0 91 63 00 	lds	r31, 0x0063
 124:	10 82       	st	Z, r1
	*GPIO_dirs[2] = Init_direction_default;
 126:	e0 91 64 00 	lds	r30, 0x0064
 12a:	f0 91 65 00 	lds	r31, 0x0065
 12e:	10 82       	st	Z, r1
	*GPIO_dirs[3] = Init_direction_default;
 130:	e0 91 66 00 	lds	r30, 0x0066
 134:	f0 91 67 00 	lds	r31, 0x0067
 138:	10 82       	st	Z, r1
 13a:	08 95       	ret

0000013c <GPIO_u8_WritePinDir>:
}

//Direction
/*Comment!: Write Pin Direction */
u8 GPIO_u8_WritePinDir(u8 PinIdx,u8 PinDir , u8 Port_Name)
{
 13c:	cf 93       	push	r28
 13e:	c8 2f       	mov	r28, r24
	u8 API_Status ;

	if(PinIdx > no_of_pins_on_port - 1)
 140:	88 30       	cpi	r24, 0x08	; 8
 142:	b8 f5       	brcc	.+110    	; 0x1b2 <GPIO_u8_WritePinDir+0x76>
	{
		API_Status = error_happen;
	}
	else
	{
		switch(PinDir)
 144:	66 23       	and	r22, r22
 146:	d9 f0       	breq	.+54     	; 0x17e <GPIO_u8_WritePinDir+0x42>
 148:	61 30       	cpi	r22, 0x01	; 1
 14a:	a9 f5       	brne	.+106    	; 0x1b6 <GPIO_u8_WritePinDir+0x7a>
		{
		case 1:
			*GPIO_dirs[ get_port_index(Port_Name) ] |= 1<<PinIdx;
 14c:	84 2f       	mov	r24, r20
 14e:	0e 94 74 00 	call	0xe8	; 0xe8 <get_port_index>
 152:	e8 2f       	mov	r30, r24
 154:	f0 e0       	ldi	r31, 0x00	; 0
 156:	ee 0f       	add	r30, r30
 158:	ff 1f       	adc	r31, r31
 15a:	e0 5a       	subi	r30, 0xA0	; 160
 15c:	ff 4f       	sbci	r31, 0xFF	; 255
 15e:	01 90       	ld	r0, Z+
 160:	f0 81       	ld	r31, Z
 162:	e0 2d       	mov	r30, r0
 164:	40 81       	ld	r20, Z
 166:	21 e0       	ldi	r18, 0x01	; 1
 168:	30 e0       	ldi	r19, 0x00	; 0
 16a:	c9 01       	movw	r24, r18
 16c:	02 c0       	rjmp	.+4      	; 0x172 <GPIO_u8_WritePinDir+0x36>
 16e:	88 0f       	add	r24, r24
 170:	99 1f       	adc	r25, r25
 172:	ca 95       	dec	r28
 174:	e2 f7       	brpl	.-8      	; 0x16e <GPIO_u8_WritePinDir+0x32>
 176:	84 2b       	or	r24, r20
 178:	80 83       	st	Z, r24
			API_Status = No_error;
 17a:	81 e0       	ldi	r24, 0x01	; 1
			break;
 17c:	1d c0       	rjmp	.+58     	; 0x1b8 <GPIO_u8_WritePinDir+0x7c>
		case 0:
			*GPIO_dirs[ get_port_index(Port_Name) ] &= ~(1<<PinIdx) ;
 17e:	84 2f       	mov	r24, r20
 180:	0e 94 74 00 	call	0xe8	; 0xe8 <get_port_index>
 184:	e8 2f       	mov	r30, r24
 186:	f0 e0       	ldi	r31, 0x00	; 0
 188:	ee 0f       	add	r30, r30
 18a:	ff 1f       	adc	r31, r31
 18c:	e0 5a       	subi	r30, 0xA0	; 160
 18e:	ff 4f       	sbci	r31, 0xFF	; 255
 190:	01 90       	ld	r0, Z+
 192:	f0 81       	ld	r31, Z
 194:	e0 2d       	mov	r30, r0
 196:	40 81       	ld	r20, Z
 198:	21 e0       	ldi	r18, 0x01	; 1
 19a:	30 e0       	ldi	r19, 0x00	; 0
 19c:	c9 01       	movw	r24, r18
 19e:	02 c0       	rjmp	.+4      	; 0x1a4 <GPIO_u8_WritePinDir+0x68>
 1a0:	88 0f       	add	r24, r24
 1a2:	99 1f       	adc	r25, r25
 1a4:	ca 95       	dec	r28
 1a6:	e2 f7       	brpl	.-8      	; 0x1a0 <GPIO_u8_WritePinDir+0x64>
 1a8:	80 95       	com	r24
 1aa:	84 23       	and	r24, r20
 1ac:	80 83       	st	Z, r24
			API_Status = No_error;
 1ae:	81 e0       	ldi	r24, 0x01	; 1
			break;
 1b0:	03 c0       	rjmp	.+6      	; 0x1b8 <GPIO_u8_WritePinDir+0x7c>
{
	u8 API_Status ;

	if(PinIdx > no_of_pins_on_port - 1)
	{
		API_Status = error_happen;
 1b2:	80 e0       	ldi	r24, 0x00	; 0
 1b4:	01 c0       	rjmp	.+2      	; 0x1b8 <GPIO_u8_WritePinDir+0x7c>
		case 0:
			*GPIO_dirs[ get_port_index(Port_Name) ] &= ~(1<<PinIdx) ;
			API_Status = No_error;
			break;
		default:
			API_Status = error_happen;
 1b6:	80 e0       	ldi	r24, 0x00	; 0
		}
	}

	return API_Status ;

}
 1b8:	cf 91       	pop	r28
 1ba:	08 95       	ret

000001bc <GPIO_u8_WritePortVal>:

}

/*Comment!: Write Port Value */
u8 GPIO_u8_WritePortVal(u8 PortVal , u8 Port_Name)
{
 1bc:	cf 93       	push	r28
 1be:	c8 2f       	mov	r28, r24
 1c0:	86 2f       	mov	r24, r22
	*GPIO_ports[ get_port_index(Port_Name) ] = PortVal ;
 1c2:	0e 94 74 00 	call	0xe8	; 0xe8 <get_port_index>
 1c6:	e8 2f       	mov	r30, r24
 1c8:	f0 e0       	ldi	r31, 0x00	; 0
 1ca:	ee 0f       	add	r30, r30
 1cc:	ff 1f       	adc	r31, r31
 1ce:	e8 59       	subi	r30, 0x98	; 152
 1d0:	ff 4f       	sbci	r31, 0xFF	; 255
 1d2:	01 90       	ld	r0, Z+
 1d4:	f0 81       	ld	r31, Z
 1d6:	e0 2d       	mov	r30, r0
 1d8:	c0 83       	st	Z, r28
	return No_error ;


}
 1da:	81 e0       	ldi	r24, 0x01	; 1
 1dc:	cf 91       	pop	r28
 1de:	08 95       	ret

000001e0 <GPIO_u8_WritePortDir>:

//Direction
/*Comment!: Write Port Direction */
u8 GPIO_u8_WritePortDir(u8 PortDir, u8 Port_Name)
{
 1e0:	cf 93       	push	r28
 1e2:	c8 2f       	mov	r28, r24
 1e4:	86 2f       	mov	r24, r22
	  *GPIO_dirs [ get_port_index(Port_Name) ] = PortDir;
 1e6:	0e 94 74 00 	call	0xe8	; 0xe8 <get_port_index>
 1ea:	e8 2f       	mov	r30, r24
 1ec:	f0 e0       	ldi	r31, 0x00	; 0
 1ee:	ee 0f       	add	r30, r30
 1f0:	ff 1f       	adc	r31, r31
 1f2:	e0 5a       	subi	r30, 0xA0	; 160
 1f4:	ff 4f       	sbci	r31, 0xFF	; 255
 1f6:	01 90       	ld	r0, Z+
 1f8:	f0 81       	ld	r31, Z
 1fa:	e0 2d       	mov	r30, r0
 1fc:	c0 83       	st	Z, r28

	return No_error ;

}
 1fe:	81 e0       	ldi	r24, 0x01	; 1
 200:	cf 91       	pop	r28
 202:	08 95       	ret

00000204 <__vector_16>:
#include "Data_Types.h"

u16 voltage_reading;

ISR(ADC_vect)
{
 204:	1f 92       	push	r1
 206:	0f 92       	push	r0
 208:	0f b6       	in	r0, 0x3f	; 63
 20a:	0f 92       	push	r0
 20c:	11 24       	eor	r1, r1
 20e:	2f 93       	push	r18
 210:	3f 93       	push	r19
 212:	4f 93       	push	r20
 214:	5f 93       	push	r21
 216:	6f 93       	push	r22
 218:	7f 93       	push	r23
 21a:	8f 93       	push	r24
 21c:	9f 93       	push	r25
 21e:	af 93       	push	r26
 220:	bf 93       	push	r27
 222:	ef 93       	push	r30
 224:	ff 93       	push	r31
	voltage_reading = myADCL | (myADCH<<8);
 226:	64 b1       	in	r22, 0x04	; 4
 228:	85 b1       	in	r24, 0x05	; 5
 22a:	70 e0       	ldi	r23, 0x00	; 0
 22c:	78 2b       	or	r23, r24
 22e:	70 93 71 00 	sts	0x0071, r23
 232:	60 93 70 00 	sts	0x0070, r22
	
	GPIO_u8_WritePortVal(((voltage_reading/1023.0)*5),'d');
 236:	80 e0       	ldi	r24, 0x00	; 0
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <__floatunsisf>
 23e:	20 e0       	ldi	r18, 0x00	; 0
 240:	30 ec       	ldi	r19, 0xC0	; 192
 242:	4f e7       	ldi	r20, 0x7F	; 127
 244:	54 e4       	ldi	r21, 0x44	; 68
 246:	0e 94 54 01 	call	0x2a8	; 0x2a8 <__divsf3>
 24a:	20 e0       	ldi	r18, 0x00	; 0
 24c:	30 e0       	ldi	r19, 0x00	; 0
 24e:	40 ea       	ldi	r20, 0xA0	; 160
 250:	50 e4       	ldi	r21, 0x40	; 64
 252:	0e 94 76 02 	call	0x4ec	; 0x4ec <__mulsf3>
 256:	0e 94 bc 01 	call	0x378	; 0x378 <__fixunssfsi>
 25a:	86 2f       	mov	r24, r22
 25c:	64 e6       	ldi	r22, 0x64	; 100
 25e:	0e 94 de 00 	call	0x1bc	; 0x1bc <GPIO_u8_WritePortVal>
	myADCSRA|= (1<<6);
 262:	36 9a       	sbi	0x06, 6	; 6
}
 264:	ff 91       	pop	r31
 266:	ef 91       	pop	r30
 268:	bf 91       	pop	r27
 26a:	af 91       	pop	r26
 26c:	9f 91       	pop	r25
 26e:	8f 91       	pop	r24
 270:	7f 91       	pop	r23
 272:	6f 91       	pop	r22
 274:	5f 91       	pop	r21
 276:	4f 91       	pop	r20
 278:	3f 91       	pop	r19
 27a:	2f 91       	pop	r18
 27c:	0f 90       	pop	r0
 27e:	0f be       	out	0x3f, r0	; 63
 280:	0f 90       	pop	r0
 282:	1f 90       	pop	r1
 284:	18 95       	reti

00000286 <main>:
int main(void)
{
	GPIO_voidInit();
 286:	0e 94 89 00 	call	0x112	; 0x112 <GPIO_voidInit>
	GPIO_u8_WritePortDir(0x0F,'d');
 28a:	64 e6       	ldi	r22, 0x64	; 100
 28c:	8f e0       	ldi	r24, 0x0F	; 15
 28e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <GPIO_u8_WritePortDir>
	GPIO_u8_WritePinDir(0,0,'a');
 292:	41 e6       	ldi	r20, 0x61	; 97
 294:	60 e0       	ldi	r22, 0x00	; 0
 296:	80 e0       	ldi	r24, 0x00	; 0
 298:	0e 94 9e 00 	call	0x13c	; 0x13c <GPIO_u8_WritePinDir>
	sei();
 29c:	78 94       	sei
	ADC_voidInit();
 29e:	0e 94 6d 00 	call	0xda	; 0xda <ADC_voidInit>
	ADC_startConversion();
 2a2:	0e 94 72 00 	call	0xe4	; 0xe4 <ADC_startConversion>
 2a6:	ff cf       	rjmp	.-2      	; 0x2a6 <main+0x20>

000002a8 <__divsf3>:
 2a8:	0c d0       	rcall	.+24     	; 0x2c2 <__divsf3x>
 2aa:	e6 c0       	rjmp	.+460    	; 0x478 <__fp_round>
 2ac:	de d0       	rcall	.+444    	; 0x46a <__fp_pscB>
 2ae:	40 f0       	brcs	.+16     	; 0x2c0 <__divsf3+0x18>
 2b0:	d5 d0       	rcall	.+426    	; 0x45c <__fp_pscA>
 2b2:	30 f0       	brcs	.+12     	; 0x2c0 <__divsf3+0x18>
 2b4:	21 f4       	brne	.+8      	; 0x2be <__divsf3+0x16>
 2b6:	5f 3f       	cpi	r21, 0xFF	; 255
 2b8:	19 f0       	breq	.+6      	; 0x2c0 <__divsf3+0x18>
 2ba:	c7 c0       	rjmp	.+398    	; 0x44a <__fp_inf>
 2bc:	51 11       	cpse	r21, r1
 2be:	10 c1       	rjmp	.+544    	; 0x4e0 <__fp_szero>
 2c0:	ca c0       	rjmp	.+404    	; 0x456 <__fp_nan>

000002c2 <__divsf3x>:
 2c2:	eb d0       	rcall	.+470    	; 0x49a <__fp_split3>
 2c4:	98 f3       	brcs	.-26     	; 0x2ac <__divsf3+0x4>

000002c6 <__divsf3_pse>:
 2c6:	99 23       	and	r25, r25
 2c8:	c9 f3       	breq	.-14     	; 0x2bc <__divsf3+0x14>
 2ca:	55 23       	and	r21, r21
 2cc:	b1 f3       	breq	.-20     	; 0x2ba <__divsf3+0x12>
 2ce:	95 1b       	sub	r25, r21
 2d0:	55 0b       	sbc	r21, r21
 2d2:	bb 27       	eor	r27, r27
 2d4:	aa 27       	eor	r26, r26
 2d6:	62 17       	cp	r22, r18
 2d8:	73 07       	cpc	r23, r19
 2da:	84 07       	cpc	r24, r20
 2dc:	38 f0       	brcs	.+14     	; 0x2ec <__divsf3_pse+0x26>
 2de:	9f 5f       	subi	r25, 0xFF	; 255
 2e0:	5f 4f       	sbci	r21, 0xFF	; 255
 2e2:	22 0f       	add	r18, r18
 2e4:	33 1f       	adc	r19, r19
 2e6:	44 1f       	adc	r20, r20
 2e8:	aa 1f       	adc	r26, r26
 2ea:	a9 f3       	breq	.-22     	; 0x2d6 <__divsf3_pse+0x10>
 2ec:	33 d0       	rcall	.+102    	; 0x354 <__divsf3_pse+0x8e>
 2ee:	0e 2e       	mov	r0, r30
 2f0:	3a f0       	brmi	.+14     	; 0x300 <__divsf3_pse+0x3a>
 2f2:	e0 e8       	ldi	r30, 0x80	; 128
 2f4:	30 d0       	rcall	.+96     	; 0x356 <__divsf3_pse+0x90>
 2f6:	91 50       	subi	r25, 0x01	; 1
 2f8:	50 40       	sbci	r21, 0x00	; 0
 2fa:	e6 95       	lsr	r30
 2fc:	00 1c       	adc	r0, r0
 2fe:	ca f7       	brpl	.-14     	; 0x2f2 <__divsf3_pse+0x2c>
 300:	29 d0       	rcall	.+82     	; 0x354 <__divsf3_pse+0x8e>
 302:	fe 2f       	mov	r31, r30
 304:	27 d0       	rcall	.+78     	; 0x354 <__divsf3_pse+0x8e>
 306:	66 0f       	add	r22, r22
 308:	77 1f       	adc	r23, r23
 30a:	88 1f       	adc	r24, r24
 30c:	bb 1f       	adc	r27, r27
 30e:	26 17       	cp	r18, r22
 310:	37 07       	cpc	r19, r23
 312:	48 07       	cpc	r20, r24
 314:	ab 07       	cpc	r26, r27
 316:	b0 e8       	ldi	r27, 0x80	; 128
 318:	09 f0       	breq	.+2      	; 0x31c <__divsf3_pse+0x56>
 31a:	bb 0b       	sbc	r27, r27
 31c:	80 2d       	mov	r24, r0
 31e:	bf 01       	movw	r22, r30
 320:	ff 27       	eor	r31, r31
 322:	93 58       	subi	r25, 0x83	; 131
 324:	5f 4f       	sbci	r21, 0xFF	; 255
 326:	2a f0       	brmi	.+10     	; 0x332 <__divsf3_pse+0x6c>
 328:	9e 3f       	cpi	r25, 0xFE	; 254
 32a:	51 05       	cpc	r21, r1
 32c:	68 f0       	brcs	.+26     	; 0x348 <__divsf3_pse+0x82>
 32e:	8d c0       	rjmp	.+282    	; 0x44a <__fp_inf>
 330:	d7 c0       	rjmp	.+430    	; 0x4e0 <__fp_szero>
 332:	5f 3f       	cpi	r21, 0xFF	; 255
 334:	ec f3       	brlt	.-6      	; 0x330 <__divsf3_pse+0x6a>
 336:	98 3e       	cpi	r25, 0xE8	; 232
 338:	dc f3       	brlt	.-10     	; 0x330 <__divsf3_pse+0x6a>
 33a:	86 95       	lsr	r24
 33c:	77 95       	ror	r23
 33e:	67 95       	ror	r22
 340:	b7 95       	ror	r27
 342:	f7 95       	ror	r31
 344:	9f 5f       	subi	r25, 0xFF	; 255
 346:	c9 f7       	brne	.-14     	; 0x33a <__divsf3_pse+0x74>
 348:	88 0f       	add	r24, r24
 34a:	91 1d       	adc	r25, r1
 34c:	96 95       	lsr	r25
 34e:	87 95       	ror	r24
 350:	97 f9       	bld	r25, 7
 352:	08 95       	ret
 354:	e1 e0       	ldi	r30, 0x01	; 1
 356:	66 0f       	add	r22, r22
 358:	77 1f       	adc	r23, r23
 35a:	88 1f       	adc	r24, r24
 35c:	bb 1f       	adc	r27, r27
 35e:	62 17       	cp	r22, r18
 360:	73 07       	cpc	r23, r19
 362:	84 07       	cpc	r24, r20
 364:	ba 07       	cpc	r27, r26
 366:	20 f0       	brcs	.+8      	; 0x370 <__divsf3_pse+0xaa>
 368:	62 1b       	sub	r22, r18
 36a:	73 0b       	sbc	r23, r19
 36c:	84 0b       	sbc	r24, r20
 36e:	ba 0b       	sbc	r27, r26
 370:	ee 1f       	adc	r30, r30
 372:	88 f7       	brcc	.-30     	; 0x356 <__divsf3_pse+0x90>
 374:	e0 95       	com	r30
 376:	08 95       	ret

00000378 <__fixunssfsi>:
 378:	98 d0       	rcall	.+304    	; 0x4aa <__fp_splitA>
 37a:	88 f0       	brcs	.+34     	; 0x39e <__fixunssfsi+0x26>
 37c:	9f 57       	subi	r25, 0x7F	; 127
 37e:	90 f0       	brcs	.+36     	; 0x3a4 <__fixunssfsi+0x2c>
 380:	b9 2f       	mov	r27, r25
 382:	99 27       	eor	r25, r25
 384:	b7 51       	subi	r27, 0x17	; 23
 386:	a0 f0       	brcs	.+40     	; 0x3b0 <__fixunssfsi+0x38>
 388:	d1 f0       	breq	.+52     	; 0x3be <__fixunssfsi+0x46>
 38a:	66 0f       	add	r22, r22
 38c:	77 1f       	adc	r23, r23
 38e:	88 1f       	adc	r24, r24
 390:	99 1f       	adc	r25, r25
 392:	1a f0       	brmi	.+6      	; 0x39a <__fixunssfsi+0x22>
 394:	ba 95       	dec	r27
 396:	c9 f7       	brne	.-14     	; 0x38a <__fixunssfsi+0x12>
 398:	12 c0       	rjmp	.+36     	; 0x3be <__fixunssfsi+0x46>
 39a:	b1 30       	cpi	r27, 0x01	; 1
 39c:	81 f0       	breq	.+32     	; 0x3be <__fixunssfsi+0x46>
 39e:	9f d0       	rcall	.+318    	; 0x4de <__fp_zero>
 3a0:	b1 e0       	ldi	r27, 0x01	; 1
 3a2:	08 95       	ret
 3a4:	9c c0       	rjmp	.+312    	; 0x4de <__fp_zero>
 3a6:	67 2f       	mov	r22, r23
 3a8:	78 2f       	mov	r23, r24
 3aa:	88 27       	eor	r24, r24
 3ac:	b8 5f       	subi	r27, 0xF8	; 248
 3ae:	39 f0       	breq	.+14     	; 0x3be <__fixunssfsi+0x46>
 3b0:	b9 3f       	cpi	r27, 0xF9	; 249
 3b2:	cc f3       	brlt	.-14     	; 0x3a6 <__fixunssfsi+0x2e>
 3b4:	86 95       	lsr	r24
 3b6:	77 95       	ror	r23
 3b8:	67 95       	ror	r22
 3ba:	b3 95       	inc	r27
 3bc:	d9 f7       	brne	.-10     	; 0x3b4 <__fixunssfsi+0x3c>
 3be:	3e f4       	brtc	.+14     	; 0x3ce <__fixunssfsi+0x56>
 3c0:	90 95       	com	r25
 3c2:	80 95       	com	r24
 3c4:	70 95       	com	r23
 3c6:	61 95       	neg	r22
 3c8:	7f 4f       	sbci	r23, 0xFF	; 255
 3ca:	8f 4f       	sbci	r24, 0xFF	; 255
 3cc:	9f 4f       	sbci	r25, 0xFF	; 255
 3ce:	08 95       	ret

000003d0 <__floatunsisf>:
 3d0:	e8 94       	clt
 3d2:	09 c0       	rjmp	.+18     	; 0x3e6 <__floatsisf+0x12>

000003d4 <__floatsisf>:
 3d4:	97 fb       	bst	r25, 7
 3d6:	3e f4       	brtc	.+14     	; 0x3e6 <__floatsisf+0x12>
 3d8:	90 95       	com	r25
 3da:	80 95       	com	r24
 3dc:	70 95       	com	r23
 3de:	61 95       	neg	r22
 3e0:	7f 4f       	sbci	r23, 0xFF	; 255
 3e2:	8f 4f       	sbci	r24, 0xFF	; 255
 3e4:	9f 4f       	sbci	r25, 0xFF	; 255
 3e6:	99 23       	and	r25, r25
 3e8:	a9 f0       	breq	.+42     	; 0x414 <__floatsisf+0x40>
 3ea:	f9 2f       	mov	r31, r25
 3ec:	96 e9       	ldi	r25, 0x96	; 150
 3ee:	bb 27       	eor	r27, r27
 3f0:	93 95       	inc	r25
 3f2:	f6 95       	lsr	r31
 3f4:	87 95       	ror	r24
 3f6:	77 95       	ror	r23
 3f8:	67 95       	ror	r22
 3fa:	b7 95       	ror	r27
 3fc:	f1 11       	cpse	r31, r1
 3fe:	f8 cf       	rjmp	.-16     	; 0x3f0 <__floatsisf+0x1c>
 400:	fa f4       	brpl	.+62     	; 0x440 <__floatsisf+0x6c>
 402:	bb 0f       	add	r27, r27
 404:	11 f4       	brne	.+4      	; 0x40a <__floatsisf+0x36>
 406:	60 ff       	sbrs	r22, 0
 408:	1b c0       	rjmp	.+54     	; 0x440 <__floatsisf+0x6c>
 40a:	6f 5f       	subi	r22, 0xFF	; 255
 40c:	7f 4f       	sbci	r23, 0xFF	; 255
 40e:	8f 4f       	sbci	r24, 0xFF	; 255
 410:	9f 4f       	sbci	r25, 0xFF	; 255
 412:	16 c0       	rjmp	.+44     	; 0x440 <__floatsisf+0x6c>
 414:	88 23       	and	r24, r24
 416:	11 f0       	breq	.+4      	; 0x41c <__floatsisf+0x48>
 418:	96 e9       	ldi	r25, 0x96	; 150
 41a:	11 c0       	rjmp	.+34     	; 0x43e <__floatsisf+0x6a>
 41c:	77 23       	and	r23, r23
 41e:	21 f0       	breq	.+8      	; 0x428 <__floatsisf+0x54>
 420:	9e e8       	ldi	r25, 0x8E	; 142
 422:	87 2f       	mov	r24, r23
 424:	76 2f       	mov	r23, r22
 426:	05 c0       	rjmp	.+10     	; 0x432 <__floatsisf+0x5e>
 428:	66 23       	and	r22, r22
 42a:	71 f0       	breq	.+28     	; 0x448 <__floatsisf+0x74>
 42c:	96 e8       	ldi	r25, 0x86	; 134
 42e:	86 2f       	mov	r24, r22
 430:	70 e0       	ldi	r23, 0x00	; 0
 432:	60 e0       	ldi	r22, 0x00	; 0
 434:	2a f0       	brmi	.+10     	; 0x440 <__floatsisf+0x6c>
 436:	9a 95       	dec	r25
 438:	66 0f       	add	r22, r22
 43a:	77 1f       	adc	r23, r23
 43c:	88 1f       	adc	r24, r24
 43e:	da f7       	brpl	.-10     	; 0x436 <__floatsisf+0x62>
 440:	88 0f       	add	r24, r24
 442:	96 95       	lsr	r25
 444:	87 95       	ror	r24
 446:	97 f9       	bld	r25, 7
 448:	08 95       	ret

0000044a <__fp_inf>:
 44a:	97 f9       	bld	r25, 7
 44c:	9f 67       	ori	r25, 0x7F	; 127
 44e:	80 e8       	ldi	r24, 0x80	; 128
 450:	70 e0       	ldi	r23, 0x00	; 0
 452:	60 e0       	ldi	r22, 0x00	; 0
 454:	08 95       	ret

00000456 <__fp_nan>:
 456:	9f ef       	ldi	r25, 0xFF	; 255
 458:	80 ec       	ldi	r24, 0xC0	; 192
 45a:	08 95       	ret

0000045c <__fp_pscA>:
 45c:	00 24       	eor	r0, r0
 45e:	0a 94       	dec	r0
 460:	16 16       	cp	r1, r22
 462:	17 06       	cpc	r1, r23
 464:	18 06       	cpc	r1, r24
 466:	09 06       	cpc	r0, r25
 468:	08 95       	ret

0000046a <__fp_pscB>:
 46a:	00 24       	eor	r0, r0
 46c:	0a 94       	dec	r0
 46e:	12 16       	cp	r1, r18
 470:	13 06       	cpc	r1, r19
 472:	14 06       	cpc	r1, r20
 474:	05 06       	cpc	r0, r21
 476:	08 95       	ret

00000478 <__fp_round>:
 478:	09 2e       	mov	r0, r25
 47a:	03 94       	inc	r0
 47c:	00 0c       	add	r0, r0
 47e:	11 f4       	brne	.+4      	; 0x484 <__fp_round+0xc>
 480:	88 23       	and	r24, r24
 482:	52 f0       	brmi	.+20     	; 0x498 <__fp_round+0x20>
 484:	bb 0f       	add	r27, r27
 486:	40 f4       	brcc	.+16     	; 0x498 <__fp_round+0x20>
 488:	bf 2b       	or	r27, r31
 48a:	11 f4       	brne	.+4      	; 0x490 <__fp_round+0x18>
 48c:	60 ff       	sbrs	r22, 0
 48e:	04 c0       	rjmp	.+8      	; 0x498 <__fp_round+0x20>
 490:	6f 5f       	subi	r22, 0xFF	; 255
 492:	7f 4f       	sbci	r23, 0xFF	; 255
 494:	8f 4f       	sbci	r24, 0xFF	; 255
 496:	9f 4f       	sbci	r25, 0xFF	; 255
 498:	08 95       	ret

0000049a <__fp_split3>:
 49a:	57 fd       	sbrc	r21, 7
 49c:	90 58       	subi	r25, 0x80	; 128
 49e:	44 0f       	add	r20, r20
 4a0:	55 1f       	adc	r21, r21
 4a2:	59 f0       	breq	.+22     	; 0x4ba <__fp_splitA+0x10>
 4a4:	5f 3f       	cpi	r21, 0xFF	; 255
 4a6:	71 f0       	breq	.+28     	; 0x4c4 <__fp_splitA+0x1a>
 4a8:	47 95       	ror	r20

000004aa <__fp_splitA>:
 4aa:	88 0f       	add	r24, r24
 4ac:	97 fb       	bst	r25, 7
 4ae:	99 1f       	adc	r25, r25
 4b0:	61 f0       	breq	.+24     	; 0x4ca <__fp_splitA+0x20>
 4b2:	9f 3f       	cpi	r25, 0xFF	; 255
 4b4:	79 f0       	breq	.+30     	; 0x4d4 <__fp_splitA+0x2a>
 4b6:	87 95       	ror	r24
 4b8:	08 95       	ret
 4ba:	12 16       	cp	r1, r18
 4bc:	13 06       	cpc	r1, r19
 4be:	14 06       	cpc	r1, r20
 4c0:	55 1f       	adc	r21, r21
 4c2:	f2 cf       	rjmp	.-28     	; 0x4a8 <__fp_split3+0xe>
 4c4:	46 95       	lsr	r20
 4c6:	f1 df       	rcall	.-30     	; 0x4aa <__fp_splitA>
 4c8:	08 c0       	rjmp	.+16     	; 0x4da <__fp_splitA+0x30>
 4ca:	16 16       	cp	r1, r22
 4cc:	17 06       	cpc	r1, r23
 4ce:	18 06       	cpc	r1, r24
 4d0:	99 1f       	adc	r25, r25
 4d2:	f1 cf       	rjmp	.-30     	; 0x4b6 <__fp_splitA+0xc>
 4d4:	86 95       	lsr	r24
 4d6:	71 05       	cpc	r23, r1
 4d8:	61 05       	cpc	r22, r1
 4da:	08 94       	sec
 4dc:	08 95       	ret

000004de <__fp_zero>:
 4de:	e8 94       	clt

000004e0 <__fp_szero>:
 4e0:	bb 27       	eor	r27, r27
 4e2:	66 27       	eor	r22, r22
 4e4:	77 27       	eor	r23, r23
 4e6:	cb 01       	movw	r24, r22
 4e8:	97 f9       	bld	r25, 7
 4ea:	08 95       	ret

000004ec <__mulsf3>:
 4ec:	0b d0       	rcall	.+22     	; 0x504 <__mulsf3x>
 4ee:	c4 cf       	rjmp	.-120    	; 0x478 <__fp_round>
 4f0:	b5 df       	rcall	.-150    	; 0x45c <__fp_pscA>
 4f2:	28 f0       	brcs	.+10     	; 0x4fe <__mulsf3+0x12>
 4f4:	ba df       	rcall	.-140    	; 0x46a <__fp_pscB>
 4f6:	18 f0       	brcs	.+6      	; 0x4fe <__mulsf3+0x12>
 4f8:	95 23       	and	r25, r21
 4fa:	09 f0       	breq	.+2      	; 0x4fe <__mulsf3+0x12>
 4fc:	a6 cf       	rjmp	.-180    	; 0x44a <__fp_inf>
 4fe:	ab cf       	rjmp	.-170    	; 0x456 <__fp_nan>
 500:	11 24       	eor	r1, r1
 502:	ee cf       	rjmp	.-36     	; 0x4e0 <__fp_szero>

00000504 <__mulsf3x>:
 504:	ca df       	rcall	.-108    	; 0x49a <__fp_split3>
 506:	a0 f3       	brcs	.-24     	; 0x4f0 <__mulsf3+0x4>

00000508 <__mulsf3_pse>:
 508:	95 9f       	mul	r25, r21
 50a:	d1 f3       	breq	.-12     	; 0x500 <__mulsf3+0x14>
 50c:	95 0f       	add	r25, r21
 50e:	50 e0       	ldi	r21, 0x00	; 0
 510:	55 1f       	adc	r21, r21
 512:	62 9f       	mul	r22, r18
 514:	f0 01       	movw	r30, r0
 516:	72 9f       	mul	r23, r18
 518:	bb 27       	eor	r27, r27
 51a:	f0 0d       	add	r31, r0
 51c:	b1 1d       	adc	r27, r1
 51e:	63 9f       	mul	r22, r19
 520:	aa 27       	eor	r26, r26
 522:	f0 0d       	add	r31, r0
 524:	b1 1d       	adc	r27, r1
 526:	aa 1f       	adc	r26, r26
 528:	64 9f       	mul	r22, r20
 52a:	66 27       	eor	r22, r22
 52c:	b0 0d       	add	r27, r0
 52e:	a1 1d       	adc	r26, r1
 530:	66 1f       	adc	r22, r22
 532:	82 9f       	mul	r24, r18
 534:	22 27       	eor	r18, r18
 536:	b0 0d       	add	r27, r0
 538:	a1 1d       	adc	r26, r1
 53a:	62 1f       	adc	r22, r18
 53c:	73 9f       	mul	r23, r19
 53e:	b0 0d       	add	r27, r0
 540:	a1 1d       	adc	r26, r1
 542:	62 1f       	adc	r22, r18
 544:	83 9f       	mul	r24, r19
 546:	a0 0d       	add	r26, r0
 548:	61 1d       	adc	r22, r1
 54a:	22 1f       	adc	r18, r18
 54c:	74 9f       	mul	r23, r20
 54e:	33 27       	eor	r19, r19
 550:	a0 0d       	add	r26, r0
 552:	61 1d       	adc	r22, r1
 554:	23 1f       	adc	r18, r19
 556:	84 9f       	mul	r24, r20
 558:	60 0d       	add	r22, r0
 55a:	21 1d       	adc	r18, r1
 55c:	82 2f       	mov	r24, r18
 55e:	76 2f       	mov	r23, r22
 560:	6a 2f       	mov	r22, r26
 562:	11 24       	eor	r1, r1
 564:	9f 57       	subi	r25, 0x7F	; 127
 566:	50 40       	sbci	r21, 0x00	; 0
 568:	8a f0       	brmi	.+34     	; 0x58c <__mulsf3_pse+0x84>
 56a:	e1 f0       	breq	.+56     	; 0x5a4 <__mulsf3_pse+0x9c>
 56c:	88 23       	and	r24, r24
 56e:	4a f0       	brmi	.+18     	; 0x582 <__mulsf3_pse+0x7a>
 570:	ee 0f       	add	r30, r30
 572:	ff 1f       	adc	r31, r31
 574:	bb 1f       	adc	r27, r27
 576:	66 1f       	adc	r22, r22
 578:	77 1f       	adc	r23, r23
 57a:	88 1f       	adc	r24, r24
 57c:	91 50       	subi	r25, 0x01	; 1
 57e:	50 40       	sbci	r21, 0x00	; 0
 580:	a9 f7       	brne	.-22     	; 0x56c <__mulsf3_pse+0x64>
 582:	9e 3f       	cpi	r25, 0xFE	; 254
 584:	51 05       	cpc	r21, r1
 586:	70 f0       	brcs	.+28     	; 0x5a4 <__mulsf3_pse+0x9c>
 588:	60 cf       	rjmp	.-320    	; 0x44a <__fp_inf>
 58a:	aa cf       	rjmp	.-172    	; 0x4e0 <__fp_szero>
 58c:	5f 3f       	cpi	r21, 0xFF	; 255
 58e:	ec f3       	brlt	.-6      	; 0x58a <__mulsf3_pse+0x82>
 590:	98 3e       	cpi	r25, 0xE8	; 232
 592:	dc f3       	brlt	.-10     	; 0x58a <__mulsf3_pse+0x82>
 594:	86 95       	lsr	r24
 596:	77 95       	ror	r23
 598:	67 95       	ror	r22
 59a:	b7 95       	ror	r27
 59c:	f7 95       	ror	r31
 59e:	e7 95       	ror	r30
 5a0:	9f 5f       	subi	r25, 0xFF	; 255
 5a2:	c1 f7       	brne	.-16     	; 0x594 <__mulsf3_pse+0x8c>
 5a4:	fe 2b       	or	r31, r30
 5a6:	88 0f       	add	r24, r24
 5a8:	91 1d       	adc	r25, r1
 5aa:	96 95       	lsr	r25
 5ac:	87 95       	ror	r24
 5ae:	97 f9       	bld	r25, 7
 5b0:	08 95       	ret

000005b2 <__tablejump2__>:
 5b2:	ee 0f       	add	r30, r30
 5b4:	ff 1f       	adc	r31, r31

000005b6 <__tablejump__>:
 5b6:	05 90       	lpm	r0, Z+
 5b8:	f4 91       	lpm	r31, Z
 5ba:	e0 2d       	mov	r30, r0
 5bc:	09 94       	ijmp

000005be <_exit>:
 5be:	f8 94       	cli

000005c0 <__stop_program>:
 5c0:	ff cf       	rjmp	.-2      	; 0x5c0 <__stop_program>
